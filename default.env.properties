spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
logging.gelf.enabled=<bool Value>
spring.jpa.show-sql=true
server.ssl.key-alias=myapp-key
logging.level.com.mycompany.project=DEBUG
spring.datasource.url=jdbc:h2:mem:testdb
spring.kafka.consumer.group-id=my-group
server.shutdown=graceful
logging.level.root=INFO
spring.datasource.driver-class-name=org.h2.Driver
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
server.ssl.key-store-type=PKCS12
server.ssl.key-store-password=${KEYSTORE_PASSWORD}
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
logging.gelf.facility=${spring.application.name}
spring.datasource.username=sa
spring.jpa.hibernate.ddl-auto=update
logging.gelf.host=graylog.openshift.svc.cluster.local
spring.datasource.password=
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
server.ssl.enabled=true
server.port=8080
logging.gelf.port=<int Value>
spring.kafka.bootstrap-servers=localhost:9092
server.ssl.key-store=file:/etc/pki/tls/keystore.p12
